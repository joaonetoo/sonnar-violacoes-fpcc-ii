---
title: 'L3P4: Diferença de sono em alunos'
author: "BEATRIZ, JOÃO, RODOLFO"
output:
  word_document:
    toc: yes
  html_notebook:
    fig_width: 7
    theme: readable
    toc: yes
    toc_float: yes
  html_document:
    theme: readable
    df_print: paged
    code_folding: show
    toc: yes
---

```{r setup, include=FALSE, message=FALSE, warning=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(hrbrthemes)
library(boot)
library(broom)
library(gridExtra)
library(ggplot2)
library(plot3D)
library(FactoMineR)
library(factoextra)
library(pscl)
library(tidymodels)
library(modelr) 
library(tidyr)
library(forcats)

theme_set(theme_ipsum_rc())
```

```{r}

dados <- read_csv("../data/violacoes.csv")

dados
```
```{r}
dados %>% 
  group_by(violation) %>% 
  summarise(
  soma = sum(count),
  .groups ="drop") %>%  ungroup() %>% arrange(desc(soma), .by_group = TRUE) 

```


```{r}
violacoes = dados %>% 
  group_by(violation, violation_subtype) %>% 
  summarise(
  soma_por_subtipo = sum(count),
  .groups ="drop")  %>% arrange(desc(soma_por_subtipo), .by_group = TRUE) %>% 
  mutate(proporcao_por_subtipo = if_else(violation == "code_smells", (soma_por_subtipo/sum(soma_por_subtipo[violation == "code_smells"]))*100
                                         ,(soma_por_subtipo/sum(soma_por_subtipo[violation == "bad_practices"]))*100))
violacoes
```
### EDA

```{r}
violacoes %>%
  filter(violation == "code_smells") %>% 
  mutate(violation_subtype = fct_reorder(violation_subtype, proporcao_por_subtipo)) %>%
  ggplot( aes(x=violation_subtype, y=proporcao_por_subtipo)) +
    geom_bar(stat="identity", fill="#f68060", alpha=.9, width=.4) +
    coord_flip() +
    xlab("") +
    ylab("%") +
    theme_bw()
```

```{r}
violacoes %>%
  filter(violation == "bad_practices")

```

```{r}
ggsave("figura-1.pdf", width = 6, height = 3)

```


```{r}
violacoes %>%
  filter(violation == "bad_practices") %>% 
  mutate(violation_subtype =  str_trunc(violation_subtype, 50, "right")) %>%
  mutate(violation_subtype = fct_reorder(violation_subtype, proporcao_por_subtipo)) %>%
  ggplot( aes(x=violation_subtype, y=proporcao_por_subtipo)) +
    geom_bar(stat="identity", fill="#f68060", alpha=.9, width=.4) +
    coord_flip() +
    labs(x = "", y = "%") +

    theme_bw()
```
```{r}
ggsave("figura-3.pdf", width = 6, height = 4)
```




### Análise do IC - Code Smells

```{r}
dados_code_smells_ic = dados %>%
  filter(violation == "code_smells")

```


```{r}
calcula_ci <- function(d, subtipo = "NA", FUN=funcao) {
    booted <- boot(data = d, 
                   subtipo = subtipo,
                   statistic = FUN,
                   R = 2000)
    ci = tidy(booted, 
              conf.level = .95,
              conf.method = "basic",
              conf.int = TRUE)
    ci
}

```

```{r}
proporcao_func <- function(d,subtipo, i) {
    resultado = d %>% 
        slice(i) %>%
        group_by(violation, violation_subtype) %>% 
        summarise(
        soma_por_subtipo = sum(count),
        .groups ="drop")  %>% arrange(desc(soma_por_subtipo), .by_group = TRUE) %>% 
        mutate(proporcao_por_subtipo =  (soma_por_subtipo/sum(soma_por_subtipo))*100) %>% 
        filter(violation_subtype == subtipo)
    proporcao = resultado %>% pull(proporcao_por_subtipo)
    proporcao
}

```


```{r}
subtipos_code_smells = violacoes %>% 
                      filter(violation == "code_smells", proporcao_por_subtipo > 3) %>% 
                      group_by(violation_subtype) %>% 
                      summarise(ic = calcula_ci(dados_code_smells_ic, violation_subtype, proporcao_func), .groups = "drop")

```


```{r}
subtipos_code_smells %>% 
  ggplot(aes(
            xmin = ic$conf.low,
            x = ic$statistic,
            xmax = ic$conf.high,
            y = violation_subtype
        )) +
        geom_linerange() +
        geom_point(color = "brown", size = 2) +
        labs(x = "", y = "") +
      theme_bw()


```

```{r}
subtipos_code_smells
```


```{r}
ggsave("figura-4.pdf", width = 6, height = 3)

```


### Análise do IC -  Bad Practices


```{r}
dados_bad_practices_ic = dados %>%
  filter(violation == "bad_practices") 

```

```{r}
subtipos_bad_practices = violacoes %>% 
                      filter(violation == "bad_practices", proporcao_por_subtipo > 3) %>% 
                      group_by(violation_subtype) %>% 
                      summarise(ic = calcula_ci(dados_bad_practices_ic, violation_subtype, proporcao_func), .groups = "drop")

```

```{r}
subtipos_bad_practices %>% 
  ggplot(aes(
            xmin = ic$conf.low,
            x = ic$statistic,
            xmax = ic$conf.high,
            y = violation_subtype
        )) +
        geom_linerange() +
        geom_point(color = "brown", size = 2) +
        labs(x = "%", y = "") +
        theme_bw()

```
```{r}
ggsave("figura-5.pdf", width = 6, height = 3)
```

### Análise do IC - Diferença entre Bad Practices x Code smells


```{r}
violacao_proporcao_func <- function(d, i) {
    resultado = d %>% 
        slice(i) %>%
        group_by(violation) %>% 
        summarise(
        soma = sum(count),
        .groups ="drop")  %>% arrange(desc(soma), .by_group = TRUE) %>% 
        mutate(violacao_proporcao =  (soma/sum(soma))*100) 
    proporcao_cs = resultado %>% filter(violation == "code_smells") %>% pull(violacao_proporcao)
    proporcao_bd = resultado %>% filter(violation =="bad_practices") %>% pull(violacao_proporcao)
    proporcao_bd - proporcao_cs
}

booted <- boot(data = dados, 
                 statistic = violacao_proporcao_func,
                 R = 2000)
violacoes_ic = tidy(booted, 
          conf.level = .95,
          conf.method = "basic",
          conf.int = TRUE)
```

```{r}
violacoes_ic %>% 
  ggplot(aes(
            xmin = conf.low,
            x = statistic,
            y="(bad practice - code smells)",
            xmax = conf.high
        )) +
        geom_linerange() +
          scale_x_continuous(limits = c(30, 100)) +
        geom_point(color = "brown", size = 2) +
        labs(x = "%", y = "") +
        theme_bw()
```

```{r}
ggsave("figura-6.pdf", width = 6, height = 2)
```

```{r}
dados %>%
        group_by(violation) %>% 
        summarise(
        soma = sum(count),
        .groups ="drop")  %>% arrange(desc(soma), .by_group = TRUE) %>% 
        mutate(violacao_proporcao =  (soma/sum(soma))*100) 
```

